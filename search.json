[{"path":"https://skgithub14.github.io/sdtmval/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 sdtmval authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://skgithub14.github.io/sdtmval/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Stephen Knapp. Author, maintainer.","code":""},{"path":"https://skgithub14.github.io/sdtmval/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Knapp S (2023). sdtmval: Utilities SDTM validation. https://github.com/skgithub14/sdtmval, https://skgithub14.github.io/sdtmval/.","code":"@Manual{,   title = {sdtmval: Utilities for SDTM validation},   author = {Stephen Knapp},   year = {2023},   note = {https://github.com/skgithub14/sdtmval, https://skgithub14.github.io/sdtmval/}, }"},{"path":"https://skgithub14.github.io/sdtmval/index.html","id":"sdtmval-","dir":"","previous_headings":"","what":"Utilities for SDTM validation","title":"Utilities for SDTM validation","text":"{sdtmval} provides set tools assist statistical programmers validating Study Data Tabulation Model (SDTM) domain data sets. Many data cleaning steps SDTM processes used repeatedly different SDTM domain validation scripts. Functionalizing repetitive tasks allows statistical programmers focus coding unique aspects SDTM domain standardize code base across studies domains. lead fewer bugs improved code readability . {sdtmval} features include: Automating BLFL, DY, EPOCH, SEQ, STAT methods create new variables Imputing formatting full partial dates: see vignette(\"Dates\") Comparing QC versus production SDTM domain tables (vignette coming soon) Applying specification data variable labels, lengths, code mapping, sorting Importing EDC SDTM data .csv .sas7bdat files Writing .xpt files (convenience wrapper haven::write_xpt()) Converting .Rmd files .R scripts (convenience wrapper knitr::purl()) Logging R session information reproducibility Data formatting","code":""},{"path":"https://skgithub14.github.io/sdtmval/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Utilities for SDTM validation","text":"can install development version {sdtmval} GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"skgithub14/sdtmval\")"},{"path":"https://skgithub14.github.io/sdtmval/index.html","id":"a-typical-work-flow-example","dir":"","previous_headings":"","what":"A typical work flow example","title":"Utilities for SDTM validation","text":"example work flow, import raw EDC table transform SDTM domain table. use made-domain ‘XX’ along example data included {sdtmval}. majority data needed EDC form/table xx.csv. also visit dates EDC table vd.csv study start/end dates SDTM table dm.sas7dbat. can imported using read_edc_tbls() read_sdtm_tbls(). raw data looks like : next thing get relevant information SDTM specification study. next set functions assumes .xlsx file contains sheets: ‘Datasets’, ‘XX’, ‘Codelists’: ‘XX’ gives variable information made-XX domain. get_data_spec() retrieves entire tab. ‘Datasets’ contains key variables domain. get_key_vars() retrieves desired domain. ‘Codelists’ provides table coded/decoded values variable domains. get_codelist() extracts data frame coded/decoded values sheet just variables desired domain. Now begin creating SDTM XX domain using EDC XX form basis. First, needs pre-processing extra white space variables. also want turn NA equivalent values like \"\" \" \" NA entire data set consistent handling missing values data processing. function trim_and_make_blanks_NA() tasks. Next, using codelist retrieved earlier, can create XXTEST variable. order calculate variables XXBLFL, EPOCH, XXDY, need visit dates EDC VD table study start/end dates subject SDTM DM table. Now, can proceed calculating timing variables using create_BLFL(), create_EPOCH(), calc_DY() functions. Next, assign sequence number using assign_SEQ() (also sorts data frame). Now bulk data cleaning complete, convert date columns character columns NA values \"\" validation table matches production table produced SAS. , use format_chars_and_dates(). final step, assign meta data spec column using assign_meta_data(). meta data includes labels column maximum allowed character lengths. Finally, write SDTM XX domain validation table SAS transport file using write_tbl_to_xpt(). previous steps, viewed interim results demonstrate features {sdtmval} however, {sdtmval} designed used pipe operators can one long, readable pipe. demonstrate, reproduce results one code chunk.","code":"# set-up library(sdtmval) library(dplyr)  domain <- \"XX\"  # set working directory to location of sdtmval package example data work_dir <- system.file(\"extdata\", package = \"sdtmval\") # read in EDC tables from the forms XX and VD edc_tbls <- c(\"xx\", \"vd\") edc_dat <- read_edc_tbls(edc_tbls, dir = work_dir)  # read in SDTM domain DM sdtm_tbls <- c(\"dm\") sdtm_dat <- read_sdtm_tbls(sdtm_tbls, dir = work_dir) spec_fname <- \"spec.xlsx\" spec <- get_data_spec(domain = domain, dir = work_dir, filename = spec_fname) key_vars <- get_key_vars(domain = domain, dir = work_dir, filename = spec_fname) codelists <- get_codelist(domain = domain, dir = work_dir, filename = spec_fname)  knitr::kable(spec) knitr::kable(codelists) key_vars #> [1] \"STUDYID\"  \"USUBJID\"  \"XXTESTCD\" \"VISIT\" sdtm_xx1 <- trim_and_make_blanks_NA(edc_dat$xx) # prepare the code list so it can be used by dplyr::recode()  xxtestcd_codelist <- codelists %>%   filter(ID == \"XXTESTCD\") %>%   select(Term, `Decoded Value`) %>%   tibble::deframe()  # create XXTEST variable sdtm_xx2 <- mutate(sdtm_xx1, XXTEST = recode(XXTESTCD, !!!xxtestcd_codelist))  knitr::kable(sdtm_xx2) sdtm_xx3 <- sdtm_xx2 %>%      # get the VISITDTC column from the EDC VD form   left_join(edc_dat$vd, by = c(\"USUBJID\", \"VISIT\")) %>%      # create the XXDTC variable   rename(XXDTC = VISITDTC) %>%      # get the study start/end dates by subject (RFSTDTC, RFXSTDTC, RFXENDTC)   left_join(sdtm_dat$dm, by = \"USUBJID\") sdtm_xx4 <- sdtm_xx3 %>%      # XXBLFL   create_BLFL(sort_date = \"XXDTC\",               domain = domain,               grouping_vars = c(\"USUBJID\", \"XXTESTCD\")) %>%      # EPOCH   create_EPOCH(date_col = \"XXDTC\") %>%      # XXDY   calc_DY(DY_col = \"XXDY\", DTC_col = \"XXDTC\")    # check the new variables and their related columns only sdtm_xx4 %>%   select(USUBJID, XXTEST, XXORRES, XXDTC, XXBLFL,           EPOCH, XXDY, starts_with(\"RF\")) %>%   knitr::kable() sdtm_xx5 <- assign_SEQ(sdtm_xx4,                         key_vars = c(\"USUBJID\", \"XXTESTCD\", \"VISIT\"),                        seq_prefix = domain)  # check the new variable sdtm_xx5 %>%   select(USUBJID, XXTESTCD, VISIT, XXDTC, XXSEQ) %>%   knitr::kable() sdtm_xx6 <- format_chars_and_dates(sdtm_xx5) sdtm_xx7 <- sdtm_xx6 %>%      # only keep columns that are domain variables and order them per the spec   select(any_of(spec$Variable)) %>%      # assign variable lengths and labels   assign_meta_data(spec = spec)  # show the final SDTM domain knitr::kable(sdtm_xx7) # check the meta data was assigned labels <- colnames(sdtm_xx7) %>%   purrr::map(~ attr(sdtm_xx7[[.]], \"label\")) %>%   unlist() lengths <- colnames(sdtm_xx7) %>%   purrr::map(~ attr(sdtm_xx7[[.]], \"width\")) %>%   unlist() data.frame(   column = colnames(sdtm_xx7),   labels = labels,   lengths = lengths ) #>      column                              labels lengths #> 1   STUDYID                    Study Identifier     200 #> 2   USUBJID           Unique Subject Identifier     200 #> 3     XXSEQ                     Sequence Number       8 #> 4  XXTESTCD                  XX Test Short Name       8 #> 5    XXTEST                        XX Test Name      40 #> 6   XXORRES Result or Finding in Original Units     200 #> 7    XXBLFL                       Baseline Flag       1 #> 8     VISIT                          Visit Name     200 #> 9     EPOCH                               Epoch     200 #> 10    XXDTC           Date/Time of Measurements      19 #> 11     XXDY                     Study Day of XX       8 write_tbl_to_xpt(sdtm_xx7, filename = domain, dir = work_dir) sdtm_xx <- edc_dat$xx %>%      # pre-processing   trim_and_make_blanks_NA() %>%      # XXTEST   dplyr::mutate(XXTEST = dplyr::recode(XXTESTCD, !!!xxtestcd_codelist)) %>%    # get the VISITDTC column from the EDC VD form   dplyr::left_join(edc_dat$vd, by = c(\"USUBJID\", \"VISIT\")) %>%      # XXDTC   dplyr::rename(XXDTC = VISITDTC) %>%    # get the study start/end dates by subject (RFSTDTC, RFXSTDTC, RFXENDTC)   dplyr::left_join(sdtm_dat$dm, by = \"USUBJID\") %>%    # XXBLFL   create_BLFL(sort_date = \"XXDTC\",               domain = domain,               grouping_vars = c(\"USUBJID\", \"XXTESTCD\")) %>%    # EPOCH   create_EPOCH(date_col = \"XXDTC\") %>%    # XXDY   calc_DY(DY_col = \"XXDY\", DTC_col = \"XXDTC\") %>%    # XXSEQ   assign_SEQ(key_vars = c(\"USUBJID\", \"XXTESTCD\", \"VISIT\"),              seq_prefix = domain) %>%    # final formatting   format_chars_and_dates() %>%   dplyr::select(dplyr::any_of(spec$Variable)) %>%   assign_meta_data(spec = spec)  # check if the two data frames are identical identical(sdtm_xx, sdtm_xx7) #> [1] TRUE"},{"path":"https://skgithub14.github.io/sdtmval/reference/assign_SEQ.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign SEQ numbers for a SDTM data set — assign_SEQ","title":"Assign SEQ numbers for a SDTM data set — assign_SEQ","text":"Assigns \"[DOMAIN]SEQ\" number sorting data set specified variables grouping \"USUBJID\".","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/assign_SEQ.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign SEQ numbers for a SDTM data set — assign_SEQ","text":"","code":"assign_SEQ(tbl, key_vars, seq_prefix, USUBJID = \"USUBJID\")"},{"path":"https://skgithub14.github.io/sdtmval/reference/assign_SEQ.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign SEQ numbers for a SDTM data set — assign_SEQ","text":"tbl data frame, SDTM table key_vars character vector key variables sort seq_prefix string, prefix SEQ per spec (usually two letter domain abbreviation) USUBJID string, column subject ID, USUBJID, default \"USUBJID\"","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/assign_SEQ.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign SEQ numbers for a SDTM data set — assign_SEQ","text":"sorted copy tbl data frame new SEQ column","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/assign_SEQ.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign SEQ numbers for a SDTM data set — assign_SEQ","text":"","code":"df <- data.frame(   USUBJID = paste(\"Subject\", c(rep(1, 3), rep(2, 3))),   XXTESTCD = paste(\"T\", rep(c(2, 3, 1), 2)) ) assign_SEQ(df, key_vars = c(\"USUBJID\", \"XXTESTCD\"), seq_prefix = \"XX\") #> # A tibble: 6 × 3 #>   USUBJID   XXTESTCD XXSEQ #>   <chr>     <chr>    <int> #> 1 Subject 1 T 1          1 #> 2 Subject 1 T 2          2 #> 3 Subject 1 T 3          3 #> 4 Subject 2 T 1          1 #> 5 Subject 2 T 2          2 #> 6 Subject 2 T 3          3"},{"path":"https://skgithub14.github.io/sdtmval/reference/assign_meta_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign meta data to columns in a SDTM table based on specification file — assign_meta_data","title":"Assign meta data to columns in a SDTM table based on specification file — assign_meta_data","text":"Trims length text date variable length specified spec assigns attributes \"label\" \"width\" column.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/assign_meta_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign meta data to columns in a SDTM table based on specification file — assign_meta_data","text":"","code":"assign_meta_data(   tbl,   spec,   datatype_col = \"Data Type\",   var_col = \"Variable\",   length_col = \"Length\",   label_col = \"Label\" )"},{"path":"https://skgithub14.github.io/sdtmval/reference/assign_meta_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign meta data to columns in a SDTM table based on specification file — assign_meta_data","text":"tbl data frame containing SDTM table spec data frame columns \"Variable\" value column tbl, \"Data Type\" specifies data types column, \"Length\" specifies character limit column, \"Label\" specifies label column datatype_col string, column spec contains data types (include values \"text\" \"date\"); default \"Data Type\" var_col string, column spec contains domain variable names length_col string, column spec contains character count limits variable label_col string, column spec contains labels variable","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/assign_meta_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign meta data to columns in a SDTM table based on specification file — assign_meta_data","text":"modified copy tbl meta data per specification","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/assign_meta_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Assign meta data to columns in a SDTM table based on specification file — assign_meta_data","text":"","code":"work_dir <- system.file(\"extdata\", package = \"sdtmval\") spec <- get_data_spec(domain = \"XX\",                       dir = work_dir,                       filename = \"spec.xlsx\") after_meta_data <- assign_meta_data(sdtmval::xx_no_meta_data, spec = spec) labels <- colnames(after_meta_data) |>   purrr::map(~ attr(after_meta_data[[.]], \"label\")) |>   unlist() lengths <- colnames(after_meta_data) |>   purrr::map(~ attr(after_meta_data[[.]], \"width\")) |>   unlist() data.frame(   column = colnames(after_meta_data),   labels = labels,   lengths = lengths ) #>      column                              labels lengths #> 1   STUDYID                    Study Identifier     200 #> 2   USUBJID           Unique Subject Identifier     200 #> 3     XXSEQ                     Sequence Number       8 #> 4  XXTESTCD                  XX Test Short Name       8 #> 5    XXTEST                        XX Test Name      40 #> 6   XXORRES Result or Finding in Original Units     200 #> 7    XXBLFL                       Baseline Flag       1 #> 8     VISIT                          Visit Name     200 #> 9     EPOCH                               Epoch     200 #> 10    XXDTC           Date/Time of Measurements      19 #> 11     XXDY                     Study Day of XX       8"},{"path":"https://skgithub14.github.io/sdtmval/reference/calc_DY.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a DY variable (day of study) — calc_DY","title":"Calculate a DY variable (day of study) — calc_DY","text":"Utilizes DY method SDTM spec: --DTC-RFSTDTC+1 --DTC RFSTDTC. --DTC-RFSTDTC --DTC precedes RFSTDTC. function can also used ENDY method spec logic.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/calc_DY.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a DY variable (day of study) — calc_DY","text":"","code":"calc_DY(tbl, DY_col, DTC_col, RFSTDTC = \"RFSTDTC\")"},{"path":"https://skgithub14.github.io/sdtmval/reference/calc_DY.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a DY variable (day of study) — calc_DY","text":"tbl data frame date column RFSTDTC column specified DTC_col argument DY_col string, name new DY column create DTC_col string, column tbl dates calculated DY value; either already date class character vector format YYYY-MM-DD RFSTDTC string, column use RFSTDTC, default \"RFSTDTC\"; either already date class character vector format YYYY-MM-DD","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/calc_DY.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a DY variable (day of study) — calc_DY","text":"modified copy tbl new DY column","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/calc_DY.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate a DY variable (day of study) — calc_DY","text":"","code":"df <- data.frame(   DTC = c(\"2023-08-01\", \"2023-08-02\", \"2023-08-03\", \"2023-08-04\"),   RFSTDTC = rep(\"2023-08-02\", 4) ) calc_DY(df, DY_col = \"XXDY\", DTC_col = \"DTC\") #>          DTC    RFSTDTC XXDY #> 1 2023-08-01 2023-08-02   -1 #> 2 2023-08-02 2023-08-02    1 #> 3 2023-08-03 2023-08-02    2 #> 4 2023-08-04 2023-08-02    3"},{"path":"https://skgithub14.github.io/sdtmval/reference/compare_qc_to_prod.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare production to QC versions of an SDTM table — compare_qc_to_prod","title":"Compare production to QC versions of an SDTM table — compare_qc_to_prod","text":"Wraps compareDF::compare_df() function prints high level summary using summary_diffs(). arguments compareDF::compare_df() set stop_on_error = F avoid errors data frames , group_col set key_vars.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/compare_qc_to_prod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare production to QC versions of an SDTM table — compare_qc_to_prod","text":"","code":"compare_qc_to_prod(qc, prod, group_col)"},{"path":"https://skgithub14.github.io/sdtmval/reference/compare_qc_to_prod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare production to QC versions of an SDTM table — compare_qc_to_prod","text":"qc data frame, SDTM QC table prod data frame, SDTM production table group_col character vector, columns use unique keys comparing qc prod. Ideally key variables domain set specification.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/compare_qc_to_prod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare production to QC versions of an SDTM table — compare_qc_to_prod","text":"named list returned compareDF::compare_df(). side effect also prints high level summary using summary_diffs().","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/convert_to_script.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert SDTM QC code from a .Rmd file to .R script — convert_to_script","title":"Convert SDTM QC code from a .Rmd file to .R script — convert_to_script","text":"Wraps knitr::purl() create .R script .Rmd file. can also auto-archive .Rmd file [dir]/archive sub-directory. useful turning first-attempt exploratory data analysis production scripts validation code complete.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/convert_to_script.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert SDTM QC code from a .Rmd file to .R script — convert_to_script","text":"","code":"convert_to_script(filename, dir = NULL, archive = F)"},{"path":"https://skgithub14.github.io/sdtmval/reference/convert_to_script.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert SDTM QC code from a .Rmd file to .R script — convert_to_script","text":"filename string, file name .Rmd file read file name .R file written (include .Rmd .R extension) dir string, directory .Rmd file .R file written, default NULL means current working directory used archive logical, whether auto-archive .Rmd file; default FALSE","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/convert_to_script.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert SDTM QC code from a .Rmd file to .R script — convert_to_script","text":"nothing","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/convert_to_script.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert SDTM QC code from a .Rmd file to .R script — convert_to_script","text":"resulting script take name .Rmd file different extension (.R) [dir]/archive already exist, created","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/convert_to_script.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert SDTM QC code from a .Rmd file to .R script — convert_to_script","text":"","code":"# get test notebook from the sdtmval/inst/extdata dir and copy it to temp dir test_file_dir <- system.file(\"extdata\", package = \"sdtmval\") filename <- \"test_notebook\" temp_path <- tempdir() file.copy(from = file.path(test_file_dir, paste0(filename, \".Rmd\")),           to = file.path(temp_path, paste0(filename, \".Rmd\"))) #> [1] TRUE  # create the script and archive the .Rmd file convert_to_script(dir = temp_path, filename = filename, archive = TRUE) #>  #>  #> processing file: /tmp/Rtmpmrb7xO/test_notebook.Rmd #> 1/3                   #> 2/3 [unnamed-chunk-1] #> 3/3                   #> output file: /tmp/Rtmpmrb7xO/test_notebook.R #> [1] TRUE"},{"path":"https://skgithub14.github.io/sdtmval/reference/create_BLFL.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a BLFL column — create_BLFL","title":"Create a BLFL column — create_BLFL","text":"Utilizes BLFL method SDTM spec create baseline flag: Equal \"Y\" last record non-missing --ORRES first dose date (RFSTDTC); NA otherwise.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/create_BLFL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a BLFL column — create_BLFL","text":"","code":"create_BLFL(   tbl,   sort_date,   domain,   grouping_vars = \"USUBJID\",   RFSTDTC = \"RFSTDTC\",   compare_date_method = \"on or before\" )"},{"path":"https://skgithub14.github.io/sdtmval/reference/create_BLFL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a BLFL column — create_BLFL","text":"tbl data frame variables USUBJID, [domain]ORRES, RFSTDTC, column specified sort_date argument sort_date string, column name sort records within USUBJID entry assigning BLFL value. also date compared RFSTDTC determine BLFL value. column either already date class character vector format YYYY-MM-DD domain string, SDTM domain abbreviation grouping_vars character vector columns group assigning BLFL, default \"USUBJID\". order vector matters. RFSTDTC string, column use RFSTDTC, default \"RFSTDTC\"; columns either date class characer class YYYY-MM-DD format compare_date_method string, one c(\"\", \"\") indicating baseline measurement evaluated study start date just ; default \"\"","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/create_BLFL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a BLFL column — create_BLFL","text":"modified copy tbl new column [domain]BLFL","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/create_BLFL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a BLFL column — create_BLFL","text":"","code":"df <- dplyr::tibble(   USUBJID = c(     rep(1, 3),     rep(2, 3)   ),   XXORRES = c(     1, 2, 2,     1, 2, NA   ),   XXDTC = as.Date(c(     \"2017-02-05\", \"2017-02-06\", \"2017-02-07\",     \"2017-02-05\", \"2017-02-06\", \"2017-02-07\"   )),   RFSTDTC = as.Date(c(     rep(\"2017-02-05\", 3),     rep(\"2017-02-07\", 3)   )) ) create_BLFL(df, sort_date = \"XXDTC\", domain = \"XX\") #> # A tibble: 6 × 5 #>   USUBJID XXORRES XXDTC      RFSTDTC    XXBLFL #>     <dbl>   <dbl> <date>     <date>     <chr>  #> 1       1       1 2017-02-05 2017-02-05 Y      #> 2       1       2 2017-02-06 2017-02-05 NA     #> 3       1       2 2017-02-07 2017-02-05 NA     #> 4       2       1 2017-02-05 2017-02-07 NA     #> 5       2       2 2017-02-06 2017-02-07 Y      #> 6       2      NA 2017-02-07 2017-02-07 NA"},{"path":"https://skgithub14.github.io/sdtmval/reference/create_EPOCH.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the EPOCH variable — create_EPOCH","title":"Create the EPOCH variable — create_EPOCH","text":"Utilizes EPOCH method SDTM spec: Missing --DTC blank; equal 'SCREENING' --DTC RFXSTDTC; equal 'TREATMENT' --DTC RFXSTDTC RFXENDTC; equal 'FOLLOW-' --DTC RFXENDTC.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/create_EPOCH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the EPOCH variable — create_EPOCH","text":"","code":"create_EPOCH(tbl, date_col, RFXSTDTC = \"RFXSTDTC\", RFXENDTC = \"RFXENDTC\")"},{"path":"https://skgithub14.github.io/sdtmval/reference/create_EPOCH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the EPOCH variable — create_EPOCH","text":"tbl data frame date class columns RFXSTDTC RFXENDTC column given date_col argument date_col string, column name event date used determine EPOCH; column can either date class character class YYYY-MM-DD format RFXSTDTC string, date column use RFXSTDTC, default \"RFXSTDTC\"; column can either date class character class YYYY-MM-DD format RFXENDTC string, date column use RFXENDTC, default \"RFXENDTC\"; column can either date class character class YYYY-MM-DD format","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/create_EPOCH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the EPOCH variable — create_EPOCH","text":"modified copy tbl EPOCH column","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/create_EPOCH.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the EPOCH variable — create_EPOCH","text":"","code":"df <- data.frame(   DTC = c(\"2023-08-01\", \"2023-08-02\", \"2023-08-03\", \"2023-08-04\"),   RFXSTDTC = rep(\"2023-08-02\", 4),   RFXENDTC = rep(\"2023-08-03\", 4) ) create_EPOCH(df, date_col = \"DTC\") #>          DTC   RFXSTDTC   RFXENDTC     EPOCH #> 1 2023-08-01 2023-08-02 2023-08-03 SCREENING #> 2 2023-08-02 2023-08-02 2023-08-03 TREATMENT #> 3 2023-08-03 2023-08-02 2023-08-03 TREATMENT #> 4 2023-08-04 2023-08-02 2023-08-03 FOLLOW-UP"},{"path":"https://skgithub14.github.io/sdtmval/reference/create_STAT.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign STAT 'NOT DONE' status — create_STAT","title":"Assign STAT 'NOT DONE' status — create_STAT","text":"Creates --STAT variable , measurements visit done, also changes --TESTCD values \"--\"","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/create_STAT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign STAT 'NOT DONE' status — create_STAT","text":"","code":"create_STAT(   df,   domain,   nd_ind,   nd_ind_cd = \"Yes\",   USUBJID = \"USUBJID\",   VISIT = \"VISIT\" )"},{"path":"https://skgithub14.github.io/sdtmval/reference/create_STAT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign STAT 'NOT DONE' status — create_STAT","text":"df data frame modify domain string, domain abbreviation caps nd_ind string, variable name df indicates test performed, usually \"Yes\"/\"\" \"Y\"/\"N\" column nd_ind_cd string, code nd_ind column signifies test done, default \"Yes\" USUBJID string, variable name df contains subject identifier, default \"USUBJID\" VISIT string, variable name df indicates VISIT field, default \"VISIT\"","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/create_STAT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign STAT 'NOT DONE' status — create_STAT","text":"modified copy df","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Example SDTM Domain 'DM' — dm","title":"Example SDTM Domain 'DM' — dm","text":"example data set simulate SDTM production domain 'DM' contains study start end date information subject. can used test create_BLFL(), create_EPOCH(), calc_DY().","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example SDTM Domain 'DM' — dm","text":"","code":"dm"},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/dm.html","id":"-dm-","dir":"Reference","previous_headings":"","what":"'dm'","title":"Example SDTM Domain 'DM' — dm","text":"data frame 2 rows 4 columns: USUBJID Subject identifier RFSTDTC Study start date RFXSTDTC First exposure date RFXENDTC Last exposure date","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/edc_xx.html","id":null,"dir":"Reference","previous_headings":"","what":"Example EDC data for form/table 'XX' — edc_xx","title":"Example EDC data for form/table 'XX' — edc_xx","text":"example data set simulate raw EDC data fake form/table 'XX'.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/edc_xx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example EDC data for form/table 'XX' — edc_xx","text":"","code":"edc_xx"},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/edc_xx.html","id":"-edc-xx-","dir":"Reference","previous_headings":"","what":"'edc_xx'","title":"Example EDC data for form/table 'XX' — edc_xx","text":"data frame 8 rows 6 columns: STUDYID Study identifier USUBJID Subject identifier VISIT Visit name XXTESTCD Test name, coded XXORRES Test result","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/format_chars_and_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Format date and character columns for SDTM tables — format_chars_and_dates","title":"Format date and character columns for SDTM tables — format_chars_and_dates","text":"Converts date columns character class replaces NA values character/date columns \"\".","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/format_chars_and_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format date and character columns for SDTM tables — format_chars_and_dates","text":"","code":"format_chars_and_dates(tbl)"},{"path":"https://skgithub14.github.io/sdtmval/reference/format_chars_and_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format date and character columns for SDTM tables — format_chars_and_dates","text":"tbl data frame, SDTM table","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/format_chars_and_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format date and character columns for SDTM tables — format_chars_and_dates","text":"modified copy tbl data frame","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/format_chars_and_dates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Format date and character columns for SDTM tables — format_chars_and_dates","text":"function applied one last steps data process assign_meta_data().","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/format_chars_and_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format date and character columns for SDTM tables — format_chars_and_dates","text":"","code":"df <- data.frame(   dates = as.Date(c(\"2017-02-05\", NA)),   strings = c(NA_character_, \"this\"),   nums = c(1, NA) ) format_chars_and_dates(df) #>        dates strings nums #> 1 2017-02-05            1 #> 2               this   NA"},{"path":"https://skgithub14.github.io/sdtmval/reference/get_codelist.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in the code list from the specification for a specific domain — get_codelist","title":"Read in the code list from the specification for a specific domain — get_codelist","text":"Reads-\"Codelists\" sheet study's specification MS Excel file filters code list variables domain","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/get_codelist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in the code list from the specification for a specific domain — get_codelist","text":"","code":"get_codelist(   domain,   dir,   filename,   var_col = \"Variable\",   codelist_sheet = \"Codelists\",   varid_col = \"ID\" )"},{"path":"https://skgithub14.github.io/sdtmval/reference/get_codelist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in the code list from the specification for a specific domain — get_codelist","text":"domain string, SDTM domain supplemental domain code dir string, specification directory filename string, file name specification var_col string, column name domain spec sheet contains variables domain, default \"Variable\" codelist_sheet string, sheet name spec's code list spec's .xlsx file, default \"Codelists\" varid_col string, column name codelist_sheet table spec's .xlsx file contains variable names, default \"ID\"","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/get_codelist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in the code list from the specification for a specific domain — get_codelist","text":"data frame code list","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/get_codelist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in the code list from the specification for a specific domain — get_codelist","text":"","code":"work_dir <- system.file(\"extdata\", package = \"sdtmval\") codelists <- get_codelist(domain = 'XX',                           dir = work_dir,                           filename = \"spec.xlsx\")"},{"path":"https://skgithub14.github.io/sdtmval/reference/get_data_spec.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in the variable specification sheet for a SDTM data set — get_data_spec","title":"Read in the variable specification sheet for a SDTM data set — get_data_spec","text":"Reads specified domain variable specification sheet MS Excel file.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/get_data_spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in the variable specification sheet for a SDTM data set — get_data_spec","text":"","code":"get_data_spec(domain, dir, filename, arrange_by = \"Order\")"},{"path":"https://skgithub14.github.io/sdtmval/reference/get_data_spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in the variable specification sheet for a SDTM data set — get_data_spec","text":"domain string, SDTM domain supplemental domain code dir string, specification directory filename string, file name specification arrange_by character vector, column(s) sort domain sheet, default \"Order\"","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/get_data_spec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in the variable specification sheet for a SDTM data set — get_data_spec","text":"data frame variable specification domain","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/get_data_spec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read in the variable specification sheet for a SDTM data set — get_data_spec","text":"readxl::read_excel() function causes access denied warning reading read-specification file. affect data import. Variables arranged descending order per \"Order\" column specification.","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/get_data_spec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in the variable specification sheet for a SDTM data set — get_data_spec","text":"","code":"work_dir <- system.file(\"extdata\", package = \"sdtmval\") spec <- get_data_spec(domain = \"XX\",                       dir = work_dir,                       filename = \"spec.xlsx\")"},{"path":"https://skgithub14.github.io/sdtmval/reference/get_key_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in the key variables for a SDTM domain — get_key_vars","title":"Read in the key variables for a SDTM domain — get_key_vars","text":"Reads \"Key Variables\" column SDTM specification MS Excel file's \"Datasets\" sheet specified domain.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/get_key_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in the key variables for a SDTM domain — get_key_vars","text":"","code":"get_key_vars(   domain,   dir,   filename,   datasets_sheet = \"Datasets\",   dataset_col = \"Dataset\",   keyvar_col = \"Key Variables\" )"},{"path":"https://skgithub14.github.io/sdtmval/reference/get_key_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in the key variables for a SDTM domain — get_key_vars","text":"domain string, SDTM domain supplemental domain code dir string, specification directory filename string, file name specification datasets_sheet string, sheet name specification Excel file key variables, default \"Datasets\" dataset_col string, column name domains table datasets_sheet, default \"Dataset\" keyvar_col string, column name key variables table datasets_sheet, default \"Key Variables\"","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/get_key_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in the key variables for a SDTM domain — get_key_vars","text":"character vector key variables specified domain","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/get_key_vars.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read in the key variables for a SDTM domain — get_key_vars","text":"readxl::read_excel() function causes access denied warning reading read-specification file. affect data import.","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/get_key_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read in the key variables for a SDTM domain — get_key_vars","text":"","code":"work_dir <- system.file(\"extdata\", package = \"sdtmval\") key_vars <- get_key_vars(domain = \"XX\",                          dir = work_dir,                          filename = \"spec.xlsx\")"},{"path":"https://skgithub14.github.io/sdtmval/reference/impute_pdates.html","id":null,"dir":"Reference","previous_headings":"","what":"Impute start or end dates — impute_pdates","title":"Impute start or end dates — impute_pdates","text":"Imputes missing date elements start end dates. Partial dates format \"UNKN-UN-UN\" combination characters numbers (ie \"2017-UN-UN\"). Dates information dates missing year converted NA. start dates, missing days assumed first month missing months assumed January. end dates, missing days assumed last day month missing months assumed December.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/impute_pdates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Impute start or end dates — impute_pdates","text":"","code":"impute_pdates(dates, ptype, input_sep = \"-\")"},{"path":"https://skgithub14.github.io/sdtmval/reference/impute_pdates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Impute start or end dates — impute_pdates","text":"dates character vector partial dates (also contain full dates) format YYYY-MM-DD ptype string either \"start\" \"end\" indicating whether start end dates imputed, respectively input_sep character separates date components dates, default \"-\"","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/impute_pdates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Impute start or end dates — impute_pdates","text":"date vector imputed dates format YYYY-MM-DD","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/impute_pdates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Impute start or end dates — impute_pdates","text":"","code":"dates <- c(   \"UNKN-UN-UN\",   \"2017-UN-UN\",   \"2017-02-UN\",   \"2017-UN-05\",   \"2017-09-03\",   \"UNKN-07-14\",   NA ) impute_pdates(dates, ptype = \"start\") #> [1] NA           \"2017-01-01\" \"2017-02-01\" \"2017-01-05\" \"2017-09-03\" #> [6] NA           NA           impute_pdates(dates, ptype = \"end\") #> [1] NA           \"2017-12-31\" \"2017-02-28\" \"2017-12-05\" \"2017-09-03\" #> [6] NA           NA"},{"path":"https://skgithub14.github.io/sdtmval/reference/inspect_diffs.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect differences between two data frames by column using — inspect_diffs","title":"Inspect differences between two data frames by column using — inspect_diffs","text":"Provides filtered data frame shows rows comparison_df element compareDF::compare_df() output list differences. column names specified diff_col, id_cols, other_cols, along grp chng_type shown.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/inspect_diffs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect differences between two data frames by column using — inspect_diffs","text":"","code":"inspect_diffs(comp, diff_col, id_cols, other_cols = NULL)"},{"path":"https://skgithub14.github.io/sdtmval/reference/inspect_diffs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect differences between two data frames by column using — inspect_diffs","text":"comp list output compareDF::compare_df() diff_col string, column name show difference id_cols character vector column names collectively form unique row, generally vector supplied group_col argument original compareDF::compare_df() call. other_cols optional, character vector additional columns show output data frame.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/inspect_diffs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect differences between two data frames by column using — inspect_diffs","text":"data frame","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://skgithub14.github.io/sdtmval/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/read_edc_tbls.html","id":null,"dir":"Reference","previous_headings":"","what":"Import EDC data tables — read_edc_tbls","title":"Import EDC data tables — read_edc_tbls","text":"Reads-EDC data table .csv files puts list.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/read_edc_tbls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import EDC data tables — read_edc_tbls","text":"","code":"read_edc_tbls(edc_tbls, dir)"},{"path":"https://skgithub14.github.io/sdtmval/reference/read_edc_tbls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import EDC data tables — read_edc_tbls","text":"edc_tbls character vector EDC table file names (without extension) dir string, EDC data directory","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/read_edc_tbls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import EDC data tables — read_edc_tbls","text":"named list data frames names taken edc_tbls data frames EDC data tables","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/read_edc_tbls.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import EDC data tables — read_edc_tbls","text":"file encoding UTF-8.","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/read_edc_tbls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import EDC data tables — read_edc_tbls","text":"","code":"edc_tbls <- c(\"xx\", \"vd\") edc_dir <- system.file(\"extdata\", package = \"sdtmval\") edc_dat <- read_edc_tbls(edc_tbls, dir = edc_dir)"},{"path":"https://skgithub14.github.io/sdtmval/reference/read_sdtm_tbls.html","id":null,"dir":"Reference","previous_headings":"","what":"Import SDTM data tables — read_sdtm_tbls","title":"Import SDTM data tables — read_sdtm_tbls","text":"Reads-SDTM data tables store .sas7bdat files puts list.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/read_sdtm_tbls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import SDTM data tables — read_sdtm_tbls","text":"","code":"read_sdtm_tbls(sdtm_tbls, dir)"},{"path":"https://skgithub14.github.io/sdtmval/reference/read_sdtm_tbls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import SDTM data tables — read_sdtm_tbls","text":"sdtm_tbls character vector SDTM table file names (without extension) dir string, directory containing production SDTM tables","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/read_sdtm_tbls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import SDTM data tables — read_sdtm_tbls","text":"named list data frames names taken sdtm_tbls data frames SDTM data","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/read_sdtm_tbls.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import SDTM data tables — read_sdtm_tbls","text":"file encoding UTF-8.","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/read_sdtm_tbls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import SDTM data tables — read_sdtm_tbls","text":"","code":"sdtm_tbls <- \"dm\" sdtm_dir <- system.file(\"extdata\", package = \"sdtmval\") sdtm_dat <- read_sdtm_tbls(sdtm_tbls, dir = sdtm_dir)"},{"path":"https://skgithub14.github.io/sdtmval/reference/reshape_adates.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshape format of all dates (full and partial) — reshape_adates","title":"Reshape format of all dates (full and partial) — reshape_adates","text":"Re-arranges full partial dates general form \"MM/DD/YYYY\" ISO 8601 format (\"YYYY-MM-DD\"). function appropriate vectors mixed full partial dates convert partial dates NA occur used .Date(\"02/UN/2017\", format = \"%m/%d/%Y\").","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/reshape_adates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshape format of all dates (full and partial) — reshape_adates","text":"","code":"reshape_adates(dates)"},{"path":"https://skgithub14.github.io/sdtmval/reference/reshape_adates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshape format of all dates (full and partial) — reshape_adates","text":"dates character vector full /partial dates","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/reshape_adates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshape format of all dates (full and partial) — reshape_adates","text":"character vector full /partial dates format \"YYYY-MM-DD\"","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/reshape_adates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reshape format of all dates (full and partial) — reshape_adates","text":"date component separator input vector dates can character.","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/reshape_adates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reshape format of all dates (full and partial) — reshape_adates","text":"","code":"dates <- c(\"02/05/2017\", \"UN/UN/2017\", \"02-05-2017\", NA) reshape_adates(dates) #> [1] \"2017-02-05\" \"2017-UN-UN\" \"2017-02-05\" NA"},{"path":"https://skgithub14.github.io/sdtmval/reference/reshape_pdates.html","id":null,"dir":"Reference","previous_headings":"","what":"Reshape format of partial dates — reshape_pdates","title":"Reshape format of partial dates — reshape_pdates","text":"Re-arranges partial dates format \"UN-UNK-UNKN\" (\"DD-MMM-YYYY\") \"UN/UN/UNKN\" (\"MM/DD/YYYY\").","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/reshape_pdates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reshape format of partial dates — reshape_pdates","text":"","code":"reshape_pdates(dates, output_sep = \"/\")"},{"path":"https://skgithub14.github.io/sdtmval/reference/reshape_pdates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reshape format of partial dates — reshape_pdates","text":"dates character vector partial dates output_sep date component separator output, default \"/\"","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/reshape_pdates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reshape format of partial dates — reshape_pdates","text":"character vector partial dates format \"UN/UN/UNKN\" (\"MM/DD/YYYY\")","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/reshape_pdates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reshape format of partial dates — reshape_pdates","text":"separator character dates components input vector dates can commonly used date separator (\"/\", \"-\", \".\", \" \"). starting format, month (\"UNK\") three letter abbreviation , output format, month converted number output format character vector, Date vector, make common SDTM date workflow operations easier case input month abbreviation matter; \"Feb\", \"feb\", \"FEB\" yield results","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/reshape_pdates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reshape format of partial dates — reshape_pdates","text":"","code":"dates <- c(   \"UN-UNK-UNKN\",   \"UN/UNK/UNKN\",   \"UN-UNK-2017\",   \"UN-Feb-2017\",   \"05-Feb-2017\",   \"05-UNK-2017\",   \"05-Feb-UNKN\",   NA ) reshape_pdates(dates) #> [1] \"UN/UN/UNKN\" \"UN/UN/UNKN\" \"UN/UN/2017\" \"02/UN/2017\" \"02/05/2017\" #> [6] \"UN/05/2017\" \"02/05/UNKN\" NA"},{"path":"https://skgithub14.github.io/sdtmval/reference/sdtmval-package.html","id":null,"dir":"Reference","previous_headings":"","what":"sdtmval: Utilities for SDTM validation — sdtmval-package","title":"sdtmval: Utilities for SDTM validation — sdtmval-package","text":"sdtmval provides set tools assist statistical programmers validating Study Data Tabulation Model (SDTM) data sets. Statistical programmers required validate SDTM data set domain programmed correctly, per SDTM Implementation Guide (SDTMIG), study specification, study protocol using process called double programming. Double programming involves two different programmers idependently converting raw electronic data cut (EDC) data SDTM domain data table comparing results ensure accurate standardization data. One attempts termed \"production\" \"validation\". Generally, production runs official programs submittals written SAS. Validation runs can programmed another language, case R.","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/sdtmval-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"sdtmval: Utilities for SDTM validation — sdtmval-package","text":"Maintainer: Stephen Knapp stephen@knappconsultingllc.com (ORCID)","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/spec_XX.html","id":null,"dir":"Reference","previous_headings":"","what":"Example domain specific tab from a SDTM specification .xlsx file — spec_XX","title":"Example domain specific tab from a SDTM specification .xlsx file — spec_XX","text":"table simulates excerpt SDTM specification .xlsx file fake domain tab XX provides labels, data types, lengths variable. data set can used test get_data_spec() assign_meta_data() functions.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/spec_XX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example domain specific tab from a SDTM specification .xlsx file — spec_XX","text":"","code":"spec_XX"},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/spec_XX.html","id":"-spec-xx-","dir":"Reference","previous_headings":"","what":"'spec_XX'","title":"Example domain specific tab from a SDTM specification .xlsx file — spec_XX","text":"data frame 12 rows 5 columns: Order order varibles data set Dataset domain abbreviation Varible domain's variables Label Variable labels Data Type Variable data types Length maximum allowed length entry","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/spec_codelists.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 'Codelists' tab from a SDTM specification .xlsx file — spec_codelists","title":"Example 'Codelists' tab from a SDTM specification .xlsx file — spec_codelists","text":"table simulates excerpt SDTM specification .xlsx file 'Codelists' tab provides coded decoded values XXTESTCD XXTEST variables, respectively. data set can used test get_codelist() function.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/spec_codelists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example 'Codelists' tab from a SDTM specification .xlsx file — spec_codelists","text":"","code":"spec_codelists"},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/spec_codelists.html","id":"-spec-codelists-","dir":"Reference","previous_headings":"","what":"'spec_codelists'","title":"Example 'Codelists' tab from a SDTM specification .xlsx file — spec_codelists","text":"data frame 3 rows 3 columns: ID variable identifier/name Term coded term Decoded Value corresponding decoded value coded term","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/spec_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Example 'Datasets' tab from a SDTM specification .xlsx file — spec_datasets","title":"Example 'Datasets' tab from a SDTM specification .xlsx file — spec_datasets","text":"table simulates excerpt SDTM specification .xlsx file 'Datasets' tab provides key variables fake domain XX. data set can used test get_key_vars() function.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/spec_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example 'Datasets' tab from a SDTM specification .xlsx file — spec_datasets","text":"","code":"spec_datasets"},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/spec_datasets.html","id":"-spec-datasets-","dir":"Reference","previous_headings":"","what":"'spec_datasets'","title":"Example 'Datasets' tab from a SDTM specification .xlsx file — spec_datasets","text":"data frame 1 row 4 columns: Dataset domain Description domain description Structure Defines qualifies unique record Key Variables domain's key variables","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/summary_diffs.html","id":null,"dir":"Reference","previous_headings":"","what":"View summary of difference between two data frames by column — summary_diffs","title":"View summary of difference between two data frames by column — summary_diffs","text":"Prints two items, first change_summary element compareDF::compare_df() output list shows comparison total number records two data frames compared. second printed item two column matrix shows number \"+\" entries (adds) number \"-\" entries (dels) compareDF::compare_df() output list. rows matrix columns two data frames compared. function used summarize output compareDF::compare_df() user can quickly see columns differences.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/summary_diffs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"View summary of difference between two data frames by column — summary_diffs","text":"","code":"summary_diffs(comp)"},{"path":"https://skgithub14.github.io/sdtmval/reference/summary_diffs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"View summary of difference between two data frames by column — summary_diffs","text":"comp list output compareDF::compare_df()","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/summary_diffs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"View summary of difference between two data frames by column — summary_diffs","text":"nothing","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/trim_and_make_blanks_NA.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim white space and make blanks NA — trim_and_make_blanks_NA","title":"Trim white space and make blanks NA — trim_and_make_blanks_NA","text":"Trims white space sides strings character vector replaces blank values (\"\" \" \") NA columns data frame character class.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/trim_and_make_blanks_NA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim white space and make blanks NA — trim_and_make_blanks_NA","text":"","code":"trim_and_make_blanks_NA(tbl)"},{"path":"https://skgithub14.github.io/sdtmval/reference/trim_and_make_blanks_NA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim white space and make blanks NA — trim_and_make_blanks_NA","text":"tbl data frame, SDTM table","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/trim_and_make_blanks_NA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trim white space and make blanks NA — trim_and_make_blanks_NA","text":"modified copy tbl data frame","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/trim_and_make_blanks_NA.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Trim white space and make blanks NA — trim_and_make_blanks_NA","text":"function applied one first steps data process ensure consistent handling strings.","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/trim_and_make_blanks_NA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trim white space and make blanks NA — trim_and_make_blanks_NA","text":"","code":"df <- data.frame(one = c(\"   a\", \"\", \" \")) trim_and_make_blanks_NA(df) #>    one #> 1    a #> 2 <NA> #> 3 <NA>"},{"path":"https://skgithub14.github.io/sdtmval/reference/trim_dates.html","id":null,"dir":"Reference","previous_headings":"","what":"Trim unknown elements in partial dates — trim_dates","title":"Trim unknown elements in partial dates — trim_dates","text":"Removes unknown elements partial date. example, \"2017-UN-UN\" trimmed \"2017\" \"2017-05-UN\" trimmed \"2017-05\". Values \"UNKN-UN-UN\" converted NA. Values year day known converted just year, ie \"2017-UN-01\" converts \"2017\". Full dates modified.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/trim_dates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trim unknown elements in partial dates — trim_dates","text":"","code":"trim_dates(dates, input_sep = \"-\")"},{"path":"https://skgithub14.github.io/sdtmval/reference/trim_dates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trim unknown elements in partial dates — trim_dates","text":"dates character vector partial dates format \"UNKN-UN-UN\" (\"YYYY-MM-DD\"); full dates can also included input_sep character separates date components input vector dates, default \"-\"","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/trim_dates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trim unknown elements in partial dates — trim_dates","text":"character vector trimmed partial dates full dates","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/trim_dates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Trim unknown elements in partial dates — trim_dates","text":"","code":"dates <- c(   \"UNKN-UN-UN\",   \"2017-UN-UN\",   \"2017-02-UN\",   \"2017-UN-05\",   \"2017-09-03\",   \"UNKN-07-14\",   NA ) trim_dates(dates) #> [1] NA           \"2017\"       \"2017-02\"    \"2017\"       \"2017-09-03\" #> [6] NA           NA"},{"path":"https://skgithub14.github.io/sdtmval/reference/vd.html","id":null,"dir":"Reference","previous_headings":"","what":"Example EDC data for form/table 'VD' — vd","title":"Example EDC data for form/table 'VD' — vd","text":"example data set simulate raw EDC data 'VD' form/table contains visit date information subject.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/vd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example EDC data for form/table 'VD' — vd","text":"","code":"vd"},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/vd.html","id":"-vd-","dir":"Reference","previous_headings":"","what":"'vd'","title":"Example EDC data for form/table 'VD' — vd","text":"data frame 6 rows 3 columns: USUBJID Subject identifier VISIT Visit name VISITDTC Visit date","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/write_sessionInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Write R session information for a script to a .txt file — write_sessionInfo","title":"Write R session information for a script to a .txt file — write_sessionInfo","text":"Writes .txt file output utils::sessionInfo() file name [filename]_sessionInfo.txt. creating log R session conditions script run , results script can reproduced future.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/write_sessionInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write R session information for a script to a .txt file — write_sessionInfo","text":"","code":"write_sessionInfo(filename, dir = NULL)"},{"path":"https://skgithub14.github.io/sdtmval/reference/write_sessionInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write R session information for a script to a .txt file — write_sessionInfo","text":"filename string, script file name (without .R extension) dir string, directory write , default NULL means current working directory used","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/write_sessionInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write R session information for a script to a .txt file — write_sessionInfo","text":"nothing","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/write_sessionInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write R session information for a script to a .txt file — write_sessionInfo","text":"","code":"path <- tempdir() write_sessionInfo(filename = \"test.R\", dir = path)"},{"path":"https://skgithub14.github.io/sdtmval/reference/write_tbl_to_xpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a SAS transport file (.xpt) — write_tbl_to_xpt","title":"Write a SAS transport file (.xpt) — write_tbl_to_xpt","text":"Writes data frame SAS transport file (.xpt) named like \"[domain].xpt\"","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/write_tbl_to_xpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a SAS transport file (.xpt) — write_tbl_to_xpt","text":"","code":"write_tbl_to_xpt(tbl, filename, dir = NULL, label = NULL)"},{"path":"https://skgithub14.github.io/sdtmval/reference/write_tbl_to_xpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a SAS transport file (.xpt) — write_tbl_to_xpt","text":"tbl data frame write filename string, SDTM domain supplemental domain name become file name name attribute transport file, .xpt file extension optional dir string, directory write , default NULL label string, data set name/label haven::write_xpt() name argument. default NULL case filename used. label must 8 characters less.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/write_tbl_to_xpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a SAS transport file (.xpt) — write_tbl_to_xpt","text":"nothing","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/write_tbl_to_xpt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a SAS transport file (.xpt) — write_tbl_to_xpt","text":"Files written using version 5 .xpt files","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/write_tbl_to_xpt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a SAS transport file (.xpt) — write_tbl_to_xpt","text":"","code":"tbl <- dplyr::tibble(one = as.numeric(1:3), two = letters[1:3]) path <- tempdir() write_tbl_to_xpt(tbl, filename = \"test.xpt\", dir = path)"},{"path":"https://skgithub14.github.io/sdtmval/reference/xx_no_meta_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example SDTM domain table XX without meta data — xx_no_meta_data","title":"Example SDTM domain table XX without meta data — xx_no_meta_data","text":"data set used test assign_meta_data() function contains fake SDTM domain XX without label lengths assigned column attributes.","code":""},{"path":"https://skgithub14.github.io/sdtmval/reference/xx_no_meta_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example SDTM domain table XX without meta data — xx_no_meta_data","text":"","code":"xx_no_meta_data"},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/reference/xx_no_meta_data.html","id":"-xx-no-meta-data-","dir":"Reference","previous_headings":"","what":"'xx_no_meta_data'","title":"Example SDTM domain table XX without meta data — xx_no_meta_data","text":"data frame 10 rows 11 columns: STUDYID Study identifier USUBJID Subject identifier XXSEQ Sequence number XXTESTCD Coded test name XXTEST Test name XXORRES Measurement original units XXBLFL Baseline flag VISIT Visit name EPOCH EPOCH XXDTC Measurement date XXDY Measurement day study","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/news/index.html","id":"major-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"sdtmval 0.3.0","text":"added create_STAT() function","code":""},{"path":"https://skgithub14.github.io/sdtmval/news/index.html","id":"minor-changes-0-3-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"sdtmval 0.3.0","text":"None","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/news/index.html","id":"major-changes-0-2-1","dir":"Changelog","previous_headings":"","what":"Major changes","title":"sdtmval 0.2.1","text":"Changed argument order write_tbl_to_xpt(), convert_to_script(), write_sessionInfo() set default dir argument functions NULL","code":""},{"path":"https://skgithub14.github.io/sdtmval/news/index.html","id":"minor-changes-0-2-1","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"sdtmval 0.2.1","text":"Improved write_tbl_to_xpt(), convert_to_script(), write_sessionInfo() input checking. Also added unit tests improved documentation examples functions. write_tbl_to_xpt() now lets users set data set name/label different filename","code":""},{"path":[]},{"path":"https://skgithub14.github.io/sdtmval/news/index.html","id":"major-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Major changes","title":"sdtmval 0.2.0","text":"Added functions comparing QC production SDTM domain data sets (compare_qc_to_prod(), inspect_diffs(), summary_diffs()) Added convert_to_script() converting exploratory .Rmd production .R scripts Added write_sessionInfo() logging R session state script run","code":""},{"path":"https://skgithub14.github.io/sdtmval/news/index.html","id":"minor-changes-0-2-0","dir":"Changelog","previous_headings":"","what":"Minor changes","title":"sdtmval 0.2.0","text":"Improved function documentation, {pkgdown} site, README example","code":""},{"path":"https://skgithub14.github.io/sdtmval/news/index.html","id":"sdtmval-010","dir":"Changelog","previous_headings":"","what":"sdtmval 0.1.0","title":"sdtmval 0.1.0","text":"Initial release.","code":""}]
